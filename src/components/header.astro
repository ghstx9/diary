---
export interface Props {
    currentPage?: string;
}

const { currentPage = 'home' } = Astro.props;
---

<header class="fixed top-0 w-full bg-black/80 backdrop-blur-md border-b border-gray-800 z-50">
    <div class="container mx-auto px-6 py-4">
        <div class="flex items-center justify-between">
            <h1 class="text-2xl font-display font-bold gradient-text">
                <a href="/">Ricky's Diary</a>
            </h1>
            <nav class="hidden md:flex space-x-8">
                <a href="/" class={`text-gray-300 hover:text-white transition-colors duration-200 ${currentPage === 'home' ? 'text-white' : ''}`}>
                    Home
                </a>
                <a href="/entries" class={`text-gray-300 hover:text-white transition-colors duration-200 ${currentPage === 'entries' ? 'text-white' : ''}`}>
                    Entries
                </a>
            </nav>
            <button id="hamburger-button" class="md:hidden text-gray-300 hover:text-white">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
                </svg>
            </button>
        </div>
    </div>
</header>

<!-- mobile menu -->
<nav id="mobile-menu" class="fixed top-0 left-0 w-full h-full bg-black/90 backdrop-blur-md z-40 flex flex-col items-center justify-center space-y-8 text-xl hidden">
    <button id="close-menu-button" class="absolute top-6 right-6 text-gray-300 hover:text-white">
        <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
    </button>
    <a href="/" class="text-gray-300 hover:text-white transition-colors duration-200 mobile-menu-link">Home</a>
    <a href="/entries" class="text-gray-300 hover:text-white transition-colors duration-200 mobile-menu-link">Entries</a>
</nav>

<script>
    const hamburgerButton = document.getElementById('hamburger-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const closeMenuButton = document.getElementById('close-menu-button');
    const mobileMenuLinks = document.querySelectorAll('.mobile-menu-link');

    if (hamburgerButton && mobileMenu && closeMenuButton) {
        hamburgerButton.addEventListener('click', () => {
            mobileMenu.classList.toggle('hidden');
        });

        closeMenuButton.addEventListener('click', () => {
            mobileMenu.classList.add('hidden');
        });

        mobileMenuLinks.forEach(link => {
            link.addEventListener('click', () => {
                mobileMenu.classList.add('hidden');
            });
        });
    }

    // header scroll effect
    window.addEventListener('scroll', () => {
        const header = document.querySelector('header');
        if (header) {
            if (window.scrollY > 100) {
                header.classList.add('bg-black/95');
            } else {
                header.classList.remove('bg-black/95');
            }
        }
    });
</script>